<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_PidControllerRelayOutput" Id="{b9c47654-8fd8-4024-a7f4-41cd5ec7251a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PidControllerRelayOutput IMPLEMENTS I_PidController
VAR_INPUT
END_VAR
VAR_OUTPUT
	relayOn : BOOL;
END_VAR
VAR
	Iterationtime: REAL;
	PB: REAL;
	Ti: REAL;
	Td: REAL;
	Kp: REAL;
	Ki: REAL;
	Kd: REAL;
	Bias: REAL;		
	processVariable: REAL; // Temperature measurement
	setpoint: REAL; // Temperature setpoint
	// IO, HMI variables
	onTime: REAL;
	e: REAL;
	I: REAL;
	Iprior: REAL;
	ePrior: REAL;
	// Cycle timer
	CycleTimerStart : BOOL := 0;
	CycleTimer : TON; // EHKÄ TÄHÄN mielummin IN parametri kuin pT? uusi pt sitten koodissa aina? tai sitten kaikki inputit ja outputit tähän?
	// Ctrl timer
	CtrlTimerStart : BOOL := 0;
	CtrlTimer : TON;	
	//
	PIDypercentage: REAL;
	Automode: BOOL;
	PercentageMode: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AutomaticControl" Id="{01caad94-c18c-4878-a8d7-56bddcb67522}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD AutomaticControl : BOOL
VAR_INPUT
	(* Temperature measurement*)
	processVariable	: REAL;
	(* Temperature setpoint*)
	setpoint	: REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
RunTimers();

IF CycleTimerStart = 0 THEN
	GetOntime(rspT := setpoint, ryT := processVariable, rIprior := Iprior, riterationtime := Iterationtime, reprior := ePrior, rKp := Kp, rKi := Ki, rKd := Kd, rbias := Bias, rontime =>onTime, re => e, rI => I);
	ePrior := e;
	Iprior := I;
	CycleTimerStart := 1;
	CtrlTimerStart := 1;
ELSE
	RelayControl(CtrltimerQ := CtrlTimer.Q, bRelayOnCommanded => relayOn);
	IF CycleTimer.Q = 1 THEN
		CycleTimerStart := 0;
		CtrlTimerStart := 0;	
	END_IF
END_IF
Automode := 1;
PercentageMode := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="CalculateConstants" Id="{9196fa2e-3cc3-417b-87d3-d54db0285dcc}">
      <Declaration><![CDATA[METHOD PRIVATE CalculateConstants : BOOL

]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetOnTime" Id="{7b2a7280-736f-47e8-8945-53bcaae8abe9}">
      <Declaration><![CDATA[METHOD PRIVATE GetOnTime : BOOL
VAR_INPUT
	rspT: REAL;
	ryT: REAL;
	rIprior: REAL;
	riterationtime: REAL;
	reprior: REAL;
	rKp: REAL;
	rKi: REAL;
	rKd: REAL;
	rbias: REAL;
END_VAR
VAR
	rD: REAL;
	rPIDy: REAL;
	rPIDypercentage: REAL;
END_VAR
VAR_OUTPUT
	rOntime: REAL;
	re: REAL;
	rI: REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
re := rspT -ryT;
rI := rIprior + re*riterationtime;
rD := (re-reprior)/riterationtime;
rPIDy := rKp*re + rKi*rI + rKd*rD + rbias;
IF rPIDy > 150 THEN
	rPIDy := 150;
END_IF
IF rPIDy < 0 THEN
	rPIDy := 0;
END_IF
rPIDypercentage := rPIDy/150;
rontime := PercentageToTime(rPIDypercentage := rPIDypercentage,rIterationtime := rIterationtime);
//percentagetotime function here
]]></ST>
      </Implementation>
    </Method>
    <Method Name="ManualControl" Id="{f31c3ffb-293a-4630-bbd6-dae3ae8c3a69}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD ManualControl : BOOL
VAR_INPUT
	iControlPercentage	: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
RunTimers();

IF Automode THEN
	relayOn := 0;
	Automode := 0;
END_IF
PIDypercentage := INT_TO_REAL(iControlPercentage)/100;
IF PIDypercentage > 0 THEN
	PercentageMode := TRUE;
	onTime := PercentageToTime(rPIDypercentage := PIDypercentage,rIterationtime := Iterationtime);
	IF CycleTimer.Q = 0 THEN
		CycleTimerStart := 1;
		CtrlTimerStart := 1;
		RelayControl(CtrltimerQ := CtrlTimer.Q, bRelayOnCommanded => relayOn);
	END_IF
		IF CycleTimer.Q = 1 THEN
			CycleTimerStart := 0;
			CtrlTimerStart := 0;	
		END_IF	
ELSIF PIDypercentage = 0 THEN
	IF relayOn = 1 AND PercentageMode THEN
		relayOn := 0;
	END_IF
	PercentageMode := FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="PercentageToTime" Id="{93baeced-4210-4c32-8776-242e07e35ff0}">
      <Declaration><![CDATA[METHOD PRIVATE PercentageToTime
VAR_INPUT
	rPIDypercentage: REAL;
	rIterationtime: REAL;
END_VAR
VAR
	dontime: DINT;
END_VAR
VAR_OUTPUT
	rontime: REAL;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[
rontime := rPIDypercentage * riterationtime;
dontime := REAL_TO_DINT(rontime*10);
rontime := DINT_TO_REAL(dontime)/10;

//rontime := F_HVACRoundLREAL(lrIN := rontime);
//https://support.industry.siemens.com/forum/WW/en/posts/round-real-to-1-decimal-point-and-convert-to-string/119734]]></ST>
      </Implementation>
    </Method>
    <Method Name="RelayControl" Id="{87eb32bd-e9ef-4602-862c-9519e8f226e3}">
      <Declaration><![CDATA[METHOD PRIVATE RelayControl : BOOL
VAR_IN_OUT
	
END_VAR
VAR_INPUT
	CtrltimerQ : BOOL;
END_VAR
VAR
END_VAR
VAR_OUTPUT
	bRelayOnCommanded : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF CtrltimerQ = 0 THEN
	bRelayOnCommanded := 1;
ELSE
	bRelayOnCommanded := 0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="ResetControl" Id="{6a187525-fc4a-463b-aee5-3571d8411b07}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD ResetControl : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
relayOn := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="RunTimers" Id="{884a85bd-3fcd-49a1-8c0c-e5a61c294b16}">
      <Declaration><![CDATA[METHOD private RunTimers : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
CtrlTimer(IN := CtrlTimerStart,PT := REAL_TO_TIME(onTime*1000));
CycleTimer(IN := CycleTimerStart,PT := REAL_TO_TIME(Iterationtime*1000));]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetParameters" Id="{34dfc5bb-85b9-4e12-9da9-756cb3ae79f3}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD SetParameters : BOOL
VAR_INPUT
	parameters	: ST_PidParameters;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF parameters.Iterationtime <> 0 THEN
	Iterationtime := parameters.Iterationtime;
ELSE
	Iterationtime := 6;
END_IF
IF parameters.PB > 0 THEN
	PB := parameters.PB;
ELSE
	PB := 9;
END_IF
IF parameters.Ti <> 0 THEN
	Ti := parameters.Ti;
ELSE
	Ti := 300;
END_IF
IF parameters.Td <> 0 THEN
	Td := parameters.Td;
ELSE
	Td := 90;
END_IF
IF parameters.Bias <> 0 THEN
	Bias := parameters.Bias;
ELSE
	Bias := 6;
END_IF

Kp := 100/PB;
Ki := 1/Ti;
Kd := 1/Td;
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_PidControllerRelayOutput">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_PidControllerRelayOutput.AutomaticControl">
      <LineId Id="40" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="14" Count="14" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="FB_PidControllerRelayOutput.CalculateConstants">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_PidControllerRelayOutput.GetOnTime">
      <LineId Id="81" Count="0" />
      <LineId Id="26" Count="11" />
      <LineId Id="5" Count="0" />
      <LineId Id="59" Count="0" />
    </LineIds>
    <LineIds Name="FB_PidControllerRelayOutput.ManualControl">
      <LineId Id="36" Count="1" />
      <LineId Id="8" Count="22" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_PidControllerRelayOutput.PercentageToTime">
      <LineId Id="33" Count="0" />
      <LineId Id="16" Count="4" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_PidControllerRelayOutput.RelayControl">
      <LineId Id="29" Count="0" />
      <LineId Id="13" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_PidControllerRelayOutput.ResetControl">
      <LineId Id="5" Count="0" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_PidControllerRelayOutput.RunTimers">
      <LineId Id="6" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_PidControllerRelayOutput.SetParameters">
      <LineId Id="29" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="42" Count="1" />
      <LineId Id="30" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="39" Count="1" />
      <LineId Id="32" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="44" Count="1" />
      <LineId Id="34" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="46" Count="1" />
      <LineId Id="36" Count="1" />
      <LineId Id="15" Count="0" />
      <LineId Id="48" Count="1" />
      <LineId Id="38" Count="0" />
      <LineId Id="24" Count="2" />
      <LineId Id="23" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>